{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "IntegTestStackUbuntu22": {
        "id": "IntegTestStackUbuntu22",
        "path": "IntegTestStackUbuntu22",
        "children": {
          "IntegVSCodeServer": {
            "id": "IntegVSCodeServer",
            "path": "IntegTestStackUbuntu22/IntegVSCodeServer",
            "children": {
              "password-secret": {
                "id": "password-secret",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/password-secret",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/password-secret/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                      "aws:cdk:cloudformation:props": {
                        "generateSecretString": {
                          "passwordLength": 16,
                          "secretStringTemplate": "{\"username\":\"participant\"}",
                          "excludePunctuation": true,
                          "includeSpace": false,
                          "generateStringKey": "password"
                        },
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.Secret",
                  "version": "2.177.0"
                }
              },
              "SecretRetrieverOnEventHandler": {
                "id": "SecretRetrieverOnEventHandler",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.177.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ],
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.177.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "secretsmanager:GetSecretValue",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Ref": "IntegVSCodeServerpasswordsecret202A5DB3"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "IntegVSCodeServerSecretRetrieverOnEventHandlerServiceRoleDefaultPolicy2641E2C6",
                                "roles": [
                                  {
                                    "Ref": "IntegVSCodeServerSecretRetrieverOnEventHandlerServiceRoleBEF8D4D2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.177.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.177.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverOnEventHandler/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "781ab0ab74634cdaf61539ab208ab777829ef07097ac21f95b9e15a3b1eedc1b.zip"
                        },
                        "description": "src/secret-retriever/secret-retriever.lambda.ts",
                        "handler": "index.handler",
                        "memorySize": 128,
                        "role": {
                          "Fn::GetAtt": [
                            "IntegVSCodeServerSecretRetrieverOnEventHandlerServiceRoleBEF8D4D2",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs20.x",
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          }
                        ],
                        "timeout": 10
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.177.0"
                }
              },
              "SecretRetrieveProvider": {
                "id": "SecretRetrieveProvider",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider",
                "children": {
                  "framework-onEvent": {
                    "id": "framework-onEvent",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/ServiceRole",
                        "children": {
                          "ImportServiceRole": {
                            "id": "ImportServiceRole",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/ServiceRole/ImportServiceRole",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.Resource",
                              "version": "2.177.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ],
                                "tags": [
                                  {
                                    "key": "app",
                                    "value": "vscode-server"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                              "version": "2.177.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "IntegVSCodeServerSecretRetrieverOnEventHandlerDD084AE3",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "IntegVSCodeServerSecretRetrieverOnEventHandlerDD084AE3",
                                                      "Arn"
                                                    ]
                                                  },
                                                  ":*"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "IntegVSCodeServerSecretRetrieveProviderframeworkonEventServiceRoleDefaultPolicyEC4DCEA0",
                                    "roles": [
                                      {
                                        "Ref": "IntegVSCodeServerSecretRetrieveProviderframeworkonEventServiceRole0F156B64"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                                  "version": "2.177.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.Policy",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Role",
                          "version": "2.177.0"
                        }
                      },
                      "Code": {
                        "id": "Code",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/Code",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/Code/Stage",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.AssetStaging",
                              "version": "2.177.0"
                            }
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/Code/AssetBucket",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                          "version": "2.177.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider/framework-onEvent/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "s3Bucket": {
                                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                              },
                              "s3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"
                            },
                            "description": "AWS CDK resource provider framework - onEvent (IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieveProvider)",
                            "environment": {
                              "variables": {
                                "USER_ON_EVENT_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "IntegVSCodeServerSecretRetrieverOnEventHandlerDD084AE3",
                                    "Arn"
                                  ]
                                }
                              }
                            },
                            "handler": "framework.onEvent",
                            "role": {
                              "Fn::GetAtt": [
                                "IntegVSCodeServerSecretRetrieveProviderframeworkonEventServiceRole0F156B64",
                                "Arn"
                              ]
                            },
                            "runtime": {
                              "Fn::FindInMap": [
                                "LatestNodeRuntimeMap",
                                {
                                  "Ref": "AWS::Region"
                                },
                                "value"
                              ]
                            },
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              }
                            ],
                            "timeout": 900
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.Function",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.custom_resources.Provider",
                  "version": "2.177.0"
                }
              },
              "SecretRetrieverCustomResource": {
                "id": "SecretRetrieverCustomResource",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SecretRetrieverCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.177.0"
                }
              },
              "vpc": {
                "id": "vpc",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/16",
                        "enableDnsHostnames": true,
                        "enableDnsSupport": true,
                        "instanceTenancy": "default",
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          },
                          {
                            "key": "Name",
                            "value": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                      "version": "2.177.0"
                    }
                  },
                  "publicSubnet1": {
                    "id": "publicSubnet1",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "availabilityZone": {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "cidrBlock": "10.0.0.0/17",
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "public"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              },
                              {
                                "key": "Name",
                                "value": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1"
                              }
                            ],
                            "vpcId": {
                              "Ref": "IntegVSCodeServervpc93DDE887"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                          "version": "2.177.0"
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1/Acl",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.177.0"
                        }
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              },
                              {
                                "key": "Name",
                                "value": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1"
                              }
                            ],
                            "vpcId": {
                              "Ref": "IntegVSCodeServervpc93DDE887"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                          "version": "2.177.0"
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "IntegVSCodeServervpcpublicSubnet1RouteTableFD418D0B"
                            },
                            "subnetId": {
                              "Ref": "IntegVSCodeServervpcpublicSubnet1Subnet928029A1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                          "version": "2.177.0"
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet1/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "IntegVSCodeServervpcIGW960F6D83"
                            },
                            "routeTableId": {
                              "Ref": "IntegVSCodeServervpcpublicSubnet1RouteTableFD418D0B"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                      "version": "2.177.0"
                    }
                  },
                  "publicSubnet2": {
                    "id": "publicSubnet2",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2",
                    "children": {
                      "Subnet": {
                        "id": "Subnet",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2/Subnet",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                          "aws:cdk:cloudformation:props": {
                            "availabilityZone": {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::GetAZs": ""
                                }
                              ]
                            },
                            "cidrBlock": "10.0.128.0/17",
                            "mapPublicIpOnLaunch": true,
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              },
                              {
                                "key": "aws-cdk:subnet-name",
                                "value": "public"
                              },
                              {
                                "key": "aws-cdk:subnet-type",
                                "value": "Public"
                              },
                              {
                                "key": "Name",
                                "value": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2"
                              }
                            ],
                            "vpcId": {
                              "Ref": "IntegVSCodeServervpc93DDE887"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                          "version": "2.177.0"
                        }
                      },
                      "Acl": {
                        "id": "Acl",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2/Acl",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.177.0"
                        }
                      },
                      "RouteTable": {
                        "id": "RouteTable",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2/RouteTable",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                          "aws:cdk:cloudformation:props": {
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              },
                              {
                                "key": "Name",
                                "value": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2"
                              }
                            ],
                            "vpcId": {
                              "Ref": "IntegVSCodeServervpc93DDE887"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                          "version": "2.177.0"
                        }
                      },
                      "RouteTableAssociation": {
                        "id": "RouteTableAssociation",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2/RouteTableAssociation",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                          "aws:cdk:cloudformation:props": {
                            "routeTableId": {
                              "Ref": "IntegVSCodeServervpcpublicSubnet2RouteTableC264EFB4"
                            },
                            "subnetId": {
                              "Ref": "IntegVSCodeServervpcpublicSubnet2SubnetE381654D"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                          "version": "2.177.0"
                        }
                      },
                      "DefaultRoute": {
                        "id": "DefaultRoute",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/publicSubnet2/DefaultRoute",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                          "aws:cdk:cloudformation:props": {
                            "destinationCidrBlock": "0.0.0.0/0",
                            "gatewayId": {
                              "Ref": "IntegVSCodeServervpcIGW960F6D83"
                            },
                            "routeTableId": {
                              "Ref": "IntegVSCodeServervpcpublicSubnet2RouteTableC264EFB4"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                      "version": "2.177.0"
                    }
                  },
                  "IGW": {
                    "id": "IGW",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/IGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          },
                          {
                            "key": "Name",
                            "value": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                      "version": "2.177.0"
                    }
                  },
                  "VPCGW": {
                    "id": "VPCGW",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/VPCGW",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                      "aws:cdk:cloudformation:props": {
                        "internetGatewayId": {
                          "Ref": "IntegVSCodeServervpcIGW960F6D83"
                        },
                        "vpcId": {
                          "Ref": "IntegVSCodeServervpc93DDE887"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                      "version": "2.177.0"
                    }
                  },
                  "RestrictDefaultSecurityGroupCustomResource": {
                    "id": "RestrictDefaultSecurityGroupCustomResource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/RestrictDefaultSecurityGroupCustomResource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/vpc/RestrictDefaultSecurityGroupCustomResource/Default",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CustomResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.Vpc",
                  "version": "2.177.0"
                }
              },
              "cf-to-server-sg": {
                "id": "cf-to-server-sg",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-to-server-sg",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-to-server-sg/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "SG for VSCodeServer - only allow CloudFront ingress",
                        "groupName": "cloudfront-to-vscode-server",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVSCodeServervpc93DDE887"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.177.0"
                    }
                  },
                  "from {IndirectPeer}:80": {
                    "id": "from {IndirectPeer}:80",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-to-server-sg/from {IndirectPeer}:80",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "description": "Allow HTTP from com.amazonaws.global.cloudfront.origin-facing",
                        "fromPort": 80,
                        "groupId": {
                          "Fn::GetAtt": [
                            "IntegVSCodeServercftoserversgFFE586B0",
                            "GroupId"
                          ]
                        },
                        "ipProtocol": "tcp",
                        "sourcePrefixListId": {
                          "Fn::GetAtt": [
                            "IntegVSCodeServercfprefixlistIdGetPrefixListIdF0821FFC",
                            "PrefixLists.0.PrefixListId"
                          ]
                        },
                        "toPort": 80
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.177.0"
                }
              },
              "cf-prefixlistId": {
                "id": "cf-prefixlistId",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId",
                "children": {
                  "GetPrefixListIdLogGroup": {
                    "id": "GetPrefixListIdLogGroup",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListIdLogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListIdLogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {
                            "retentionInDays": 1,
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                      "version": "2.177.0"
                    }
                  },
                  "GetPrefixListIdRole": {
                    "id": "GetPrefixListIdRole",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListIdRole",
                    "children": {
                      "ImportGetPrefixListIdRole": {
                        "id": "ImportGetPrefixListIdRole",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListIdRole/ImportGetPrefixListIdRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.177.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListIdRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.177.0"
                    }
                  },
                  "GetPrefixListId": {
                    "id": "GetPrefixListId",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListId",
                    "children": {
                      "Provider": {
                        "id": "Provider",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListId/Provider",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.SingletonFunction",
                          "version": "2.177.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListId/Resource",
                        "children": {
                          "Default": {
                            "id": "Default",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListId/Resource/Default",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.CfnResource",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CustomResource",
                          "version": "2.177.0"
                        }
                      },
                      "CustomResourcePolicy": {
                        "id": "CustomResourcePolicy",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListId/CustomResourcePolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/GetPrefixListId/CustomResourcePolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "ec2:DescribeManagedPrefixLists",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "IntegVSCodeServercfprefixlistIdGetPrefixListIdCustomResourcePolicyAB3F4958",
                                "roles": [
                                  {
                                    "Ref": "IntegVSCodeServercfprefixlistIdGetPrefixListIdRole1302B3E1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.custom_resources.AwsCustomResource",
                      "version": "2.177.0"
                    }
                  },
                  "PrefixList": {
                    "id": "PrefixList",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-prefixlistId/PrefixList",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.4.2"
                }
              },
              "server-instance-role": {
                "id": "server-instance-role",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/server-instance-role",
                "children": {
                  "Importserver-instance-role": {
                    "id": "Importserver-instance-role",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/server-instance-role/Importserver-instance-role",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/server-instance-role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": [
                                  "ec2.amazonaws.com",
                                  "ssm.amazonaws.com"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/CloudWatchAgentServerPolicy"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonQDeveloperAccess"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/ReadOnlyAccess"
                              ]
                            ]
                          }
                        ],
                        "policies": [
                          {
                            "policyName": "VSCodeInstanceInlinePolicy",
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "iam:AddRoleToInstanceProfile",
                                    "iam:AttachRolePolicy",
                                    "iam:CreateRole",
                                    "iam:CreateServiceLinkedRole",
                                    "iam:DeleteRole",
                                    "iam:DeleteRolePermissionsBoundary",
                                    "iam:DeleteRolePolicy",
                                    "iam:DeleteServiceLinkedRole",
                                    "iam:DetachRolePolicy",
                                    "iam:GetRole",
                                    "iam:GetRolePolicy",
                                    "iam:GetServiceLinkedRoleDeletionStatus",
                                    "iam:ListAttachedRolePolicies",
                                    "iam:ListInstanceProfilesForRole",
                                    "iam:ListRolePolicies",
                                    "iam:ListRoleTags",
                                    "iam:ListRoles",
                                    "iam:PutRolePermissionsBoundary",
                                    "iam:PutRolePolicy",
                                    "iam:RemoveRoleFromInstanceProfile",
                                    "iam:TagRole",
                                    "iam:UntagRole",
                                    "iam:UpdateAssumeRolePolicy",
                                    "iam:UpdateRole",
                                    "iam:UpdateRoleDescription",
                                    "sts:AssumeRole"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:iam::",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":role/cdk-*"
                                      ]
                                    ]
                                  },
                                  "Sid": "StsAccess"
                                },
                                {
                                  "Action": "iam:PassRole",
                                  "Condition": {
                                    "StringLike": {
                                      "iam:PassedToService": "cloudformation.amazonaws.com"
                                    }
                                  },
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:iam::",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":role/cdk-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "cloudformation:*",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:cloudformation:*:",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":stack/CDKToolkit/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "cloudformation:CreateChangeSet",
                                    "cloudformation:DeleteChangeSet",
                                    "cloudformation:ExecuteChangeSet",
                                    "ec2:DescribeInstances",
                                    "ec2:DescribeVolumesModifications*",
                                    "ec2:ModifyVolume"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": "*",
                                  "Sid": "S3Access"
                                },
                                {
                                  "Action": [
                                    "ecr:CreateRepository",
                                    "ecr:DeleteRepository",
                                    "ecr:DescribeRepositories",
                                    "ecr:GetLifecyclePolicy",
                                    "ecr:PutImageScanningConfiguration",
                                    "ecr:PutLifecyclePolicy",
                                    "ecr:SetRepositoryPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:ecr:*:",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":repository/cdk-*"
                                      ]
                                    ]
                                  },
                                  "Sid": "ECRAccess"
                                },
                                {
                                  "Action": [
                                    "ssm:DeleteParameter*",
                                    "ssm:GetParameter*",
                                    "ssm:PutParameter*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:ssm:*:",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/cdk-bootstrap/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "codepipeline:DisableStageTransition",
                                    "codepipeline:EnableStageTransition",
                                    "codepipeline:StartPipelineExecution",
                                    "codepipeline:StopPipelineExecution",
                                    "codepipeline:UpdatePipeline"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:codepipeline:*:",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":*/*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "kms:Decrypt",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:kms:*:",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":key/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        ],
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.177.0"
                }
              },
              "server-instance": {
                "id": "server-instance",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/server-instance",
                "children": {
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/server-instance/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          {
                            "Ref": "IntegVSCodeServerserverinstancerole7745B5BB"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/server-instance/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "blockDeviceMappings": [
                          {
                            "deviceName": "/dev/sda1",
                            "ebs": {
                              "encrypted": true,
                              "deleteOnTermination": true,
                              "volumeSize": 40,
                              "volumeType": "gp3"
                            }
                          }
                        ],
                        "iamInstanceProfile": {
                          "Ref": "IntegVSCodeServerserverinstanceInstanceProfile6130979E"
                        },
                        "imageId": {
                          "Ref": "SsmParameterValueawsservicecanonicalubuntuserverjammystablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
                        },
                        "instanceType": "m7g.xlarge",
                        "launchTemplate": {
                          "launchTemplateName": "IntegTestStackUbuntu22IntegVSCodeServerserverinstanceLaunchTemplate777D49BA",
                          "version": {
                            "Fn::GetAtt": [
                              "IntegVSCodeServerserverinstanceLaunchTemplate43932ED3",
                              "LatestVersionNumber"
                            ]
                          }
                        },
                        "monitoring": true,
                        "networkInterfaces": [
                          {
                            "deviceIndex": "0",
                            "associatePublicIpAddress": true,
                            "subnetId": {
                              "Ref": "IntegVSCodeServervpcpublicSubnet1Subnet928029A1"
                            },
                            "groupSet": [
                              {
                                "Fn::GetAtt": [
                                  "IntegVSCodeServercftoserversgFFE586B0",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          },
                          {
                            "key": "Name",
                            "value": "VSCodeServer"
                          }
                        ],
                        "userData": {
                          "Fn::Base64": "\n        #cloud-config\n          hostname: VSCodeServer\n          runcmd:\n            - mkdir -p /Workshop && chown -R participant:participant /Workshop\n      "
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnInstance",
                      "version": "2.177.0"
                    }
                  },
                  "LaunchTemplate": {
                    "id": "LaunchTemplate",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/server-instance/LaunchTemplate",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::LaunchTemplate",
                      "aws:cdk:cloudformation:props": {
                        "launchTemplateData": {
                          "metadataOptions": {
                            "httpTokens": "required"
                          }
                        },
                        "launchTemplateName": "IntegTestStackUbuntu22IntegVSCodeServerserverinstanceLaunchTemplate777D49BA"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnLaunchTemplate",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.Instance",
                  "version": "2.177.0"
                }
              },
              "cf-cache-policy": {
                "id": "cf-cache-policy",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-cache-policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-cache-policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::CachePolicy",
                      "aws:cdk:cloudformation:props": {
                        "cachePolicyConfig": {
                          "name": "cf-cache-policy-vscodeserver-IntegTestStackUbuntu22",
                          "comment": "Cache policy for VSCodeServer",
                          "minTtl": 1,
                          "maxTtl": 31536000,
                          "defaultTtl": 86400,
                          "parametersInCacheKeyAndForwardedToOrigin": {
                            "cookiesConfig": {
                              "cookieBehavior": "all"
                            },
                            "headersConfig": {
                              "headerBehavior": "whitelist",
                              "headers": [
                                "Accept-Charset",
                                "Authorization",
                                "Origin",
                                "Accept",
                                "Referer",
                                "Host",
                                "Accept-Language",
                                "Accept-Encoding",
                                "Accept-Datetime"
                              ]
                            },
                            "enableAcceptEncodingGzip": false,
                            "enableAcceptEncodingBrotli": false,
                            "queryStringsConfig": {
                              "queryStringBehavior": "all"
                            }
                          }
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.CfnCachePolicy",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CachePolicy",
                  "version": "2.177.0"
                }
              },
              "cf-distribution": {
                "id": "cf-distribution",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-distribution",
                "children": {
                  "Origin1": {
                    "id": "Origin1",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-distribution/Origin1",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.4.2"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/cf-distribution/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                      "aws:cdk:cloudformation:props": {
                        "distributionConfig": {
                          "enabled": true,
                          "origins": [
                            {
                              "domainName": {
                                "Fn::GetAtt": [
                                  "IntegVSCodeServerserverinstance0A3D62D7",
                                  "PublicDnsName"
                                ]
                              },
                              "id": "Cloudfront-IntegTestStackUbuntu22-IntegTestStackUbuntu22",
                              "customOriginConfig": {
                                "originSslProtocols": [
                                  "TLSv1.2"
                                ],
                                "originProtocolPolicy": "http-only"
                              }
                            }
                          ],
                          "defaultCacheBehavior": {
                            "pathPattern": "*",
                            "targetOriginId": "Cloudfront-IntegTestStackUbuntu22-IntegTestStackUbuntu22",
                            "allowedMethods": [
                              "GET",
                              "HEAD",
                              "OPTIONS",
                              "PUT",
                              "PATCH",
                              "POST",
                              "DELETE"
                            ],
                            "cachePolicyId": {
                              "Ref": "IntegVSCodeServercfcachepolicy8F5F1F69"
                            },
                            "compress": true,
                            "originRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
                            "viewerProtocolPolicy": "allow-all"
                          },
                          "cacheBehaviors": [
                            {
                              "pathPattern": "/proxy/*",
                              "targetOriginId": "Cloudfront-IntegTestStackUbuntu22-IntegTestStackUbuntu22",
                              "allowedMethods": [
                                "GET",
                                "HEAD",
                                "OPTIONS",
                                "PUT",
                                "PATCH",
                                "POST",
                                "DELETE"
                              ],
                              "cachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
                              "compress": false,
                              "originRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
                              "viewerProtocolPolicy": "allow-all"
                            }
                          ],
                          "comment": "Distribution for VSCodeServer",
                          "httpVersion": "http2and3",
                          "ipv6Enabled": true,
                          "priceClass": "PriceClass_All"
                        },
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
                  "version": "2.177.0"
                }
              },
              "ssm-document-ubuntu": {
                "id": "ssm-document-ubuntu",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/ssm-document-ubuntu",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SSM::Document",
                  "aws:cdk:cloudformation:props": {
                    "content": {
                      "schemaVersion": "2.2",
                      "description": "Bootstrap VSCode code-server instance",
                      "parameters": {
                        "VSCodePassword": {
                          "type": "String",
                          "default": {
                            "Ref": "AWS::StackId"
                          }
                        },
                        "NodeVersion": {
                          "type": "String",
                          "default": "20",
                          "allowedValues": [
                            "22",
                            "20",
                            "18"
                          ]
                        },
                        "DotNetVersion": {
                          "type": "String",
                          "default": "8.0",
                          "allowedValues": [
                            "8.0",
                            "7.0"
                          ]
                        }
                      },
                      "mainSteps": [
                        {
                          "action": "aws:configurePackage",
                          "name": "InstallCloudWatchAgent",
                          "inputs": {
                            "name": "AmazonCloudWatchAgent",
                            "action": "Install"
                          }
                        },
                        {
                          "action": "aws:runDocument",
                          "name": "ConfigureCloudWatchAgent",
                          "inputs": {
                            "documentType": "SSMDocument",
                            "documentPath": "AmazonCloudWatch-ManageAgent",
                            "documentParameters": {
                              "action": "configure",
                              "mode": "ec2",
                              "optionalConfigurationSource": "default",
                              "optionalRestart": "yes"
                            }
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallAptPackagesApt",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "apt-get -q update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q apt-utils",
                              "apt-get -q update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q needrestart unattended-upgrades",
                              "sed -i 's/#$nrconf{kernelhints} = -1;/$nrconf{kernelhints} = 0;/' /etc/needrestart/needrestart.conf",
                              "sed -i 's/#$nrconf{verbosity} = 2;/$nrconf{verbosity} = 0;/' /etc/needrestart/needrestart.conf",
                              "sed -i \"s/#$nrconf{restart} = 'i';/$nrconf{restart} = 'a';/\" /etc/needrestart/needrestart.conf",
                              "echo \"Apt helper packages added. Checking configuration\"",
                              "cat /etc/needrestart/needrestart.conf"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallBasePackagesApt",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "apt-get -q update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q curl gnupg whois argon2 openssl locales locales-all unzip apt-transport-https ca-certificates software-properties-common nginx"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "AddUserApt",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "echo 'Adding user: ${VSCodeUser}'",
                              "adduser --disabled-password --gecos '' participant",
                              "echo \"participant:{{ VSCodePassword }}\" | chpasswd",
                              "usermod -aG sudo participant",
                              "tee /etc/sudoers.d/91-vscode-user <<EOF\nparticipant ALL=(ALL) NOPASSWD:ALL\nEOF",
                              "mkdir -p /home/participant && chown -R participant:participant /home/participant",
                              "echo \"User added. Checking configuration\"",
                              "getent passwd participant"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallNodeApt",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /usr/share/keyrings/nodesource.gpg",
                              "echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/node_{{ NodeVersion }}.x nodistro main\" > /etc/apt/sources.list.d/nodesource.list",
                              "apt-get -q update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q nodejs",
                              "npm install -g npm@latest",
                              "echo \"Node and npm installed. Checking configuration\"",
                              "node -v",
                              "npm -v"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallDockerApt",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg",
                              "echo \"deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release --codename --short) stable\" > /etc/apt/sources.list.d/docker.list",
                              "apt-get -q update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q docker-ce docker-ce-cli containerd.io",
                              "systemctl restart code-server@participant.service",
                              "systemctl start docker.service",
                              "echo \"Docker installed. Checking configuration\"",
                              "docker --version",
                              "systemctl status docker.service"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallGitApt",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "add-apt-repository ppa:git-core/ppa",
                              "apt-get -q update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q git",
                              "sudo -u participant git config --global user.email \"participant@example.com\"",
                              "sudo -u participant git config --global user.name \"Workshop participant\"",
                              "sudo -u participant git config --global init.defaultBranch \"main\"",
                              "echo \"Git installed. Checking configuration\"",
                              "git --version"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallPythonApt",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "apt-get -q update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q python3-pip python3-venv python3-boto3 python3-pytest",
                              "echo 'alias pytest=pytest-3' >> /home/participant/.bashrc",
                              "systemctl restart code-server@participant.service",
                              "systemctl start multipathd.service packagekit.service",
                              "systemctl restart unattended-upgrades.service",
                              "echo \"Python and Pip installed. Checking configuration\"",
                              "python3 --version",
                              "pip3 --version"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallAWSCLI",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "curl -fsSL https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m).zip -o /tmp/aws-cli.zip",
                              "unzip -q -d /tmp /tmp/aws-cli.zip",
                              "sudo /tmp/aws/install",
                              "rm -rf /tmp/aws",
                              "echo \"AWS CLI installed. Checking configuration\"",
                              "aws --version"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "ConfigureCodeServer",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "export HOME=/home/participant",
                              "curl -fsSL https://code-server.dev/install.sh | bash -s -- 2>&1",
                              "systemctl enable --now code-server@participant 2>&1",
                              "tee /etc/nginx/conf.d/code-server.conf <<EOF\nserver {\n    listen 80;\n    listen [::]:80;\n    # server_name distribution.distributionDomainName;\n    server_name *.cloudfront.net;\n    location / {\n      proxy_pass http://localhost:8080/;\n      proxy_set_header Host \\$host;\n      proxy_set_header Upgrade \\$http_upgrade;\n      proxy_set_header Connection upgrade;\n      proxy_set_header Accept-Encoding gzip;\n    }\n    location /app {\n      proxy_pass http://localhost:8081/app;\n      proxy_set_header Host \\$host;\n      proxy_set_header Upgrade \\$http_upgrade;\n      proxy_set_header Connection upgrade;\n      proxy_set_header Accept-Encoding gzip;\n    }\n}\nEOF",
                              "mkdir -p /home/participant/.config/code-server",
                              "tee /home/participant/.config/code-server/config.yaml <<EOF\ncert: false\nauth: password\nhashed-password: \"$(echo -n {{ VSCodePassword }} | argon2 $(openssl rand -base64 12) -e)\"\nEOF",
                              "mkdir -p /home/participant/.local/share/code-server/User/",
                              "touch /home/participant/.hushlogin",
                              "mkdir -p /Workshop && chown -R participant:participant /Workshop",
                              "tee /home/participant/.local/share/code-server/User/settings.json <<EOF\n{\n  \"extensions.autoUpdate\": false,\n  \"extensions.autoCheckUpdates\": false,\n  \"telemetry.telemetryLevel\": \"off\",\n  \"security.workspace.trust.startupPrompt\": \"never\",\n  \"security.workspace.trust.enabled\": false,\n  \"security.workspace.trust.banner\": \"never\",\n  \"security.workspace.trust.emptyWindow\": false,\n  \"python.testing.pytestEnabled\": true,\n  \"auto-run-command.rules\": [\n    {\n      \"command\": \"workbench.action.terminal.new\"\n    }\n  ]\n}\nEOF",
                              "chown -R participant:participant /home/participant",
                              "systemctl restart code-server@participant",
                              "systemctl restart nginx",
                              "sudo -u participant --login code-server --install-extension AmazonWebServices.aws-toolkit-vscode --force",
                              "sudo -u participant --login code-server --install-extension AmazonWebServices.amazon-q-vscode --force",
                              "sudo -u participant --login code-server --install-extension synedra.auto-run-command --force",
                              "sudo -u participant --login code-server --install-extension vscjava.vscode-java-pack --force",
                              "sudo -u participant --login code-server --install-extension ms-vscode.live-server --force",
                              "chown -R participant:participant /home/participant",
                              "echo \"Nginx installed. Checking configuration\"",
                              "nginx -t 2>&1",
                              "systemctl status nginx",
                              "echo \"CodeServer installed. Checking configuration\"",
                              "code-server -v",
                              "systemctl status code-server@participant"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "UpdateProfile",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "echo LANG=en_US.utf-8 >> /etc/environment",
                              "echo LC_ALL=en_US.UTF-8 >> /etc/environment",
                              "echo 'PATH=$PATH:/home/participant/.local/bin' >> /home/participant/.bashrc",
                              "echo 'export PATH' >> /home/participant/.bashrc",
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "echo 'export AWS_REGION=",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    "' >> /home/participant/.bashrc"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "echo 'export AWS_ACCOUNTID=",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    "' >> /home/participant/.bashrc"
                                  ]
                                ]
                              },
                              "echo 'export NEXT_TELEMETRY_DISABLED=1' >> /home/participant/.bashrc",
                              "echo \"export PS1='\\[\\033[01;32m\\]\\u:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\" >> /home/participant/.bashrc",
                              "chown -R participant:participant /home/participant"
                            ]
                          }
                        },
                        {
                          "action": "aws:runShellScript",
                          "name": "InstallCDK",
                          "inputs": {
                            "runCommand": [
                              "#!/bin/bash",
                              "npm install -g aws-cdk",
                              "echo \"AWS CDK installed. Checking configuration\"",
                              "cdk --version"
                            ]
                          }
                        }
                      ]
                    },
                    "documentType": "Command",
                    "name": "vscode-server-ubuntu-IntegTestStackUbuntu22",
                    "tags": [
                      {
                        "key": "app",
                        "value": "vscode-server"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ssm.CfnDocument",
                  "version": "2.177.0"
                }
              },
              "InstallerOnEventHandler": {
                "id": "InstallerOnEventHandler",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.177.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ],
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.177.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "ssm:SendCommand",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":ec2:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":instance/",
                                              {
                                                "Ref": "IntegVSCodeServerserverinstance0A3D62D7"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":ssm:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":document/AmazonCloudWatch-ManageAgent"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":ssm:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":document/vscode-server-ubuntu-IntegTestStackUbuntu22"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "IntegVSCodeServerInstallerOnEventHandlerServiceRoleDefaultPolicy1CAD86C2",
                                "roles": [
                                  {
                                    "Ref": "IntegVSCodeServerInstallerOnEventHandlerServiceRole59651FEF"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.177.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.177.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerOnEventHandler/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "a9865c9d36c7aa999e28cb7926e7a3a8e0b6d0854b25131a172024c5777442fa.zip"
                        },
                        "description": "src/installer/installer.lambda.ts",
                        "handler": "index.handler",
                        "memorySize": 512,
                        "role": {
                          "Fn::GetAtt": [
                            "IntegVSCodeServerInstallerOnEventHandlerServiceRole59651FEF",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs20.x",
                        "tags": [
                          {
                            "key": "app",
                            "value": "vscode-server"
                          }
                        ],
                        "timeout": 300
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.177.0"
                }
              },
              "InstallerProvider": {
                "id": "InstallerProvider",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider",
                "children": {
                  "framework-onEvent": {
                    "id": "framework-onEvent",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/ServiceRole",
                        "children": {
                          "ImportServiceRole": {
                            "id": "ImportServiceRole",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/ServiceRole/ImportServiceRole",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.Resource",
                              "version": "2.177.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ],
                                "tags": [
                                  {
                                    "key": "app",
                                    "value": "vscode-server"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                              "version": "2.177.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "IntegVSCodeServerInstallerOnEventHandler6FF91542",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "IntegVSCodeServerInstallerOnEventHandler6FF91542",
                                                      "Arn"
                                                    ]
                                                  },
                                                  ":*"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "IntegVSCodeServerInstallerProviderframeworkonEventServiceRoleDefaultPolicy3E54FC3A",
                                    "roles": [
                                      {
                                        "Ref": "IntegVSCodeServerInstallerProviderframeworkonEventServiceRoleA509851F"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                                  "version": "2.177.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.Policy",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Role",
                          "version": "2.177.0"
                        }
                      },
                      "Code": {
                        "id": "Code",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/Code",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/Code/Stage",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.AssetStaging",
                              "version": "2.177.0"
                            }
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/Code/AssetBucket",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                          "version": "2.177.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider/framework-onEvent/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "s3Bucket": {
                                "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                              },
                              "s3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"
                            },
                            "description": "AWS CDK resource provider framework - onEvent (IntegTestStackUbuntu22/IntegVSCodeServer/InstallerProvider)",
                            "environment": {
                              "variables": {
                                "USER_ON_EVENT_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "IntegVSCodeServerInstallerOnEventHandler6FF91542",
                                    "Arn"
                                  ]
                                }
                              }
                            },
                            "handler": "framework.onEvent",
                            "role": {
                              "Fn::GetAtt": [
                                "IntegVSCodeServerInstallerProviderframeworkonEventServiceRoleA509851F",
                                "Arn"
                              ]
                            },
                            "runtime": {
                              "Fn::FindInMap": [
                                "LatestNodeRuntimeMap",
                                {
                                  "Ref": "AWS::Region"
                                },
                                "value"
                              ]
                            },
                            "tags": [
                              {
                                "key": "app",
                                "value": "vscode-server"
                              }
                            ],
                            "timeout": 900
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.Function",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.custom_resources.Provider",
                  "version": "2.177.0"
                }
              },
              "SSMInstallerCustomResource": {
                "id": "SSMInstallerCustomResource",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SSMInstallerCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "IntegTestStackUbuntu22/IntegVSCodeServer/SSMInstallerCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.177.0"
                }
              },
              "domainName": {
                "id": "domainName",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/domainName",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.177.0"
                }
              },
              "password": {
                "id": "password",
                "path": "IntegTestStackUbuntu22/IntegVSCodeServer/password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "LatestNodeRuntimeMap": {
            "id": "LatestNodeRuntimeMap",
            "path": "IntegTestStackUbuntu22/LatestNodeRuntimeMap",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnMapping",
              "version": "2.177.0"
            }
          },
          "Custom::VpcRestrictDefaultSGCustomResourceProvider": {
            "id": "Custom::VpcRestrictDefaultSGCustomResourceProvider",
            "path": "IntegTestStackUbuntu22/Custom::VpcRestrictDefaultSGCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "IntegTestStackUbuntu22/Custom::VpcRestrictDefaultSGCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.177.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "IntegTestStackUbuntu22/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.177.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "IntegTestStackUbuntu22/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.177.0"
            }
          },
          "AWS679f53fac002430cb0da5b7982bd2287": {
            "id": "AWS679f53fac002430cb0da5b7982bd2287",
            "path": "IntegTestStackUbuntu22/AWS679f53fac002430cb0da5b7982bd2287",
            "children": {
              "Code": {
                "id": "Code",
                "path": "IntegTestStackUbuntu22/AWS679f53fac002430cb0da5b7982bd2287/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "IntegTestStackUbuntu22/AWS679f53fac002430cb0da5b7982bd2287/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.177.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "IntegTestStackUbuntu22/AWS679f53fac002430cb0da5b7982bd2287/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.177.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "IntegTestStackUbuntu22/AWS679f53fac002430cb0da5b7982bd2287/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "ce2f3595a340d6c519a65888ef97e3b9b64f053f83608e32cc28162e22d7d99a.zip"
                    },
                    "handler": "index.handler",
                    "loggingConfig": {
                      "logGroup": {
                        "Ref": "IntegVSCodeServercfprefixlistIdGetPrefixListIdLogGroup171C2803"
                      }
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "IntegVSCodeServercfprefixlistIdGetPrefixListIdRole1302B3E1",
                        "Arn"
                      ]
                    },
                    "runtime": {
                      "Fn::FindInMap": [
                        "LatestNodeRuntimeMap",
                        {
                          "Ref": "AWS::Region"
                        },
                        "value"
                      ]
                    },
                    "timeout": 120
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.177.0"
            }
          },
          "SsmParameterValue:--aws--service--canonical--ubuntu--server--jammy--stable--current--arm64--hvm--ebs-gp2--ami-id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--canonical--ubuntu--server--jammy--stable--current--arm64--hvm--ebs-gp2--ami-id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "IntegTestStackUbuntu22/SsmParameterValue:--aws--service--canonical--ubuntu--server--jammy--stable--current--arm64--hvm--ebs-gp2--ami-id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.177.0"
            }
          },
          "SsmParameterValue:--aws--service--canonical--ubuntu--server--jammy--stable--current--arm64--hvm--ebs-gp2--ami-id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--canonical--ubuntu--server--jammy--stable--current--arm64--hvm--ebs-gp2--ami-id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "IntegTestStackUbuntu22/SsmParameterValue:--aws--service--canonical--ubuntu--server--jammy--stable--current--arm64--hvm--ebs-gp2--ami-id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.177.0"
            }
          },
          "login-handler": {
            "id": "login-handler",
            "path": "IntegTestStackUbuntu22/login-handler",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "IntegTestStackUbuntu22/login-handler/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "IntegTestStackUbuntu22/login-handler/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/login-handler/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.177.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "IntegTestStackUbuntu22/login-handler/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "IntegTestStackUbuntu22/login-handler/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.177.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "IntegTestStackUbuntu22/login-handler/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.177.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "IntegTestStackUbuntu22/login-handler/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "23732f3d1982f7fb0da3bd6638a8107337bb767fea165b45eae12000a1dd67ce.zip"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "loginhandlerServiceRole330B0B32",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs20.x",
                    "timeout": 30
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.177.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "IntegTestStackUbuntu22/login-handler/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/login-handler/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.177.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "IntegTestStackUbuntu22/login-handler/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.177.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.177.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.177.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.177.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.177.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:DeleteRetentionPolicy",
                                    "logs:PutRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.177.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "IntegTestStackUbuntu22/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "IntegTestStackUbuntu22/Exports",
            "children": {
              "Output{\"Ref\":\"loginhandler99CCCCFD\"}": {
                "id": "Output{\"Ref\":\"loginhandler99CCCCFD\"}",
                "path": "IntegTestStackUbuntu22/Exports/Output{\"Ref\":\"loginhandler99CCCCFD\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.177.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"IntegVSCodeServercfdistributionFDBE873F\",\"DomainName\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"IntegVSCodeServercfdistributionFDBE873F\",\"DomainName\"]}",
                "path": "IntegTestStackUbuntu22/Exports/Output{\"Fn::GetAtt\":[\"IntegVSCodeServercfdistributionFDBE873F\",\"DomainName\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.177.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"IntegVSCodeServerSecretRetrieverCustomResource2F3DB8BD\",\"secretPasswordValue\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"IntegVSCodeServerSecretRetrieverCustomResource2F3DB8BD\",\"secretPasswordValue\"]}",
                "path": "IntegTestStackUbuntu22/Exports/Output{\"Fn::GetAtt\":[\"IntegVSCodeServerSecretRetrieverCustomResource2F3DB8BD\",\"secretPasswordValue\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "IntegTestStackUbuntu22/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.177.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "IntegTestStackUbuntu22/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.177.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.177.0"
        }
      },
      "IntegSetupVSCodeOnUbuntu": {
        "id": "IntegSetupVSCodeOnUbuntu",
        "path": "IntegSetupVSCodeOnUbuntu",
        "children": {
          "DefaultTest": {
            "id": "DefaultTest",
            "path": "IntegSetupVSCodeOnUbuntu/DefaultTest",
            "children": {
              "Default": {
                "id": "Default",
                "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/Default",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.4.2"
                }
              },
              "DeployAssert": {
                "id": "DeployAssert",
                "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert",
                "children": {
                  "LambdaInvoke493987f824f978002013a8ed7c9980f4": {
                    "id": "LambdaInvoke493987f824f978002013a8ed7c9980f4",
                    "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LambdaInvoke493987f824f978002013a8ed7c9980f4",
                    "children": {
                      "SdkProvider": {
                        "id": "SdkProvider",
                        "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LambdaInvoke493987f824f978002013a8ed7c9980f4/SdkProvider",
                        "children": {
                          "AssertionsProvider": {
                            "id": "AssertionsProvider",
                            "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LambdaInvoke493987f824f978002013a8ed7c9980f4/SdkProvider/AssertionsProvider",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.4.2"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/integ-tests-alpha.AssertionsProvider",
                          "version": "2.177.0-alpha.0"
                        }
                      },
                      "Default": {
                        "id": "Default",
                        "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LambdaInvoke493987f824f978002013a8ed7c9980f4/Default",
                        "children": {
                          "Default": {
                            "id": "Default",
                            "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LambdaInvoke493987f824f978002013a8ed7c9980f4/Default/Default",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.CfnResource",
                              "version": "2.177.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CustomResource",
                          "version": "2.177.0"
                        }
                      },
                      "Invoke": {
                        "id": "Invoke",
                        "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LambdaInvoke493987f824f978002013a8ed7c9980f4/Invoke",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.177.0"
                        }
                      },
                      "AssertionResults": {
                        "id": "AssertionResults",
                        "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LambdaInvoke493987f824f978002013a8ed7c9980f4/AssertionResults",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnOutput",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/integ-tests-alpha.LambdaInvokeFunction",
                      "version": "2.177.0-alpha.0"
                    }
                  },
                  "SingletonFunction1488541a7b23466481b69b4408076b81": {
                    "id": "SingletonFunction1488541a7b23466481b69b4408076b81",
                    "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81",
                    "children": {
                      "Staging": {
                        "id": "Staging",
                        "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/Staging",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.177.0"
                        }
                      },
                      "Role": {
                        "id": "Role",
                        "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/Role",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.177.0"
                        }
                      },
                      "Handler": {
                        "id": "Handler",
                        "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/Handler",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.177.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.4.2"
                    }
                  },
                  "LatestNodeRuntimeMap": {
                    "id": "LatestNodeRuntimeMap",
                    "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/LatestNodeRuntimeMap",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnMapping",
                      "version": "2.177.0"
                    }
                  },
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnParameter",
                      "version": "2.177.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "IntegSetupVSCodeOnUbuntu/DefaultTest/DeployAssert/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnRule",
                      "version": "2.177.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Stack",
                  "version": "2.177.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCase",
              "version": "2.177.0-alpha.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/integ-tests-alpha.IntegTest",
          "version": "2.177.0-alpha.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.4.2"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.177.0"
    }
  }
}